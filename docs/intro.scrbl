#lang scribble/manual

@(require scriblib/footnote)

@(define-footnote notes0 footnotes0)


@title[#:tag "introduction"]{引言}

欢迎来到Git的世界。Git是一个功能强大的内容跟踪系统。希望这份文档能帮助你加深对它的理解，揭示出它底层设计的那份简洁---哪怕表面上看它长长的选项列表挺让人头晕目眩的。

开始深入之前，我先介绍几个术语名称，它们将在文中反复出现：

@itemlist[
 @item{
  @bold{代码仓库（repository）}--- @bold{代码仓库}是一系列@italic{提交（commit）}的集合（一份提交就是一份存档，保存了项目的@italic{工作树}在过去某个时候所呈现的样子，不论是在你的机器上还是别人的机器上）。仓库还维护一个HEAD指针（见下），用来标识当前工作树检出的分支或提交位置。最后，仓库还包含一系列@italic{分支}和@italic{标签}，它们用来命名某些特定的提交。
 }
 @item{
  @bold{索引（the index）}--- 与其它的版本管理工具不同，Git在提交代码的时候不是直接把@italic{工作树}上的改动提交到仓库里，而是先把改动记录到一个叫做“@bold{索引}”的地方。你可以把它看成这样一种机制：它让你在最终进行提交操作之前可以挨个“确认”每处改动---而提交操作则会把所有确认过的改动一次性记录下来。为了便于理解，索引有时也称为“暂存区（staging area）”。
 }
 @item{
  @bold{工作树（working tree）}--- @bold{工作树}即工作目录@notes0{文件系统上的目录是树形结构，因此工作目录也称为工作树，两者是一样的。为了便于阅读，译文中有些地方会以“工作目录”代替原文的“工作树”---译者注}，它是你文件系统上任意一个与@italic{代码仓库}关联起来的目录（典型的判断方法是看它是否包含一个名为@code{.git}的子目录）。工作树包括该目录下的所有文件及子目录。
 }
 @item{
  @bold{提交（commit）}--- 一份@bold{提交}是你的工作树在某一时刻的快照。产生提交前一刻的HEAD指针（见下）的引用内容就成为当前提交的父节点。“变更历史”的概念就这样产生了。
 }
 @item{
  @bold{分支（branch）}--- @bold{分支}仅仅是某个提交的一个名字（很快会对提交对象作详细的介绍）。分支也是一种引用（reference），由它指向的提交开始依次往前回溯父提交，串联起来就是这一支的开发历史。这就形成了所谓“开发的分支”的概念。
 }
 @item{
  @bold{标签（tag）}--- @bold{标签}也是某个提交的一个名字，与@italic{分支}类似，只不过同一个标签永远指向同一个提交@notes0{分支名指向的是该分支的最后一次提交，在该分支有新提交产生时会自动更新为指向新提交---译者注}，还有标签可以带一段描述文字。
 }
 @item{
  @bold{主分支（master）}--- 在大部分仓库里，开发的主线都在一个叫做“@bold{master}”的分支上完成。其实这就是默认分支的名字，没有什么特别的。
 }
 @item{
  @bold{头部指针（HEAD）}--- 你的代码仓库用@bold{HEAD}指针来标识当前检出（checkout）的内容：
  @itemlist[
   @item{
    如果你检出的是一个分支，HEAD符号指针就指向这个分支，并且暗示着分支名的指向要随着后续的提交而更新。
   }
   @item{
    如果你检出的是一个特定的提交，HEAD就仅仅指向这个提交了。这时候它称为“游离的@italic{HEAD}”。举例来说，当你检出一个标签名的时候就会出现这种情况。
   }
  ]
 }
]

@para{
使用Git工作的流程通常是这样：创建好一个仓库之后，你就在工作目录上展开你的工作。一旦你的工作到达了某个重要的点---可能是一个bug修复完成了，可能是一天的工作结束了，可能是所有东西通过了编译---你陆续把一些改动添加到索引里。当索引里包含了你想要提交的全部内容，你就把索引的内容记录到仓库里。下面用一个简单的图表来展示典型的项目生命周期：
}

@image["images/lifecycle.png"]

脑海里先装着这幅基本的图景。接下来的章节将试着阐述各个实体分别是怎样在Git中扮演重要角色的。

@margin-note{
@bold{LICENSE}: 本文档遵循@hyperlink["https://creativecommons.org/licenses/by/4.0/legalcode"]{Creative Commons BY 4.0 license}许可。若想将本文翻译为其它语言，注明出处即可。
}

@(footnotes0)
